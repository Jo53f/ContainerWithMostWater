import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class Solution2Test {
    Solution2 solution2 = new Solution2();

    @Test
    void maxArea() {
        int[] heights = {1,8,6,2,5,4,8,3,7};
        int result = solution2.maxArea(heights);
        assertEquals(49, result);
    }

    @Test
    void maxArea2() {
        int[] heights = {1,1};
        int result = solution2.maxArea(heights);
        assertEquals(1, result);
    }

    @Test
    void maxArea3() {
        int[] heights = {9, 9399, 572, 7318, 5830, 9708, 8907, 4289, 9784, 8732, 3500, 8244, 58, 7409, 9989, 8372, 5337, 810, 6961, 704, 7665, 1720, 3829, 1208, 7439, 6721, 8077, 7297, 9123, 4909, 6208, 8020, 8820, 4055, 8262, 922, 27, 619, 2386, 6931, 1453, 7516, 3582, 1063, 6387, 3610, 9386, 7472, 2168, 3125, 4803, 3690, 676, 5771, 2601, 9379, 3043, 838, 3869, 1877, 1921, 9964, 3061, 8303, 8398, 8117, 8453, 733, 8722, 9377, 5814, 8899, 3972, 956, 7561, 7691, 1898, 7936, 70, 1838, 8171, 6570, 983, 139, 2199, 1969, 6361, 8065, 3063, 8509, 991, 1426, 5699, 4802, 4219, 1810, 9113, 1983, 7497, 7454, 3465, 4091, 5224, 648, 4142, 679, 5381, 209, 6275, 4849, 3904, 6862, 3096, 5012, 8661, 6356, 6538, 3735, 2591, 2762, 507, 3808, 2944, 6722, 4546, 5568, 3191, 171, 8261, 4685, 4573, 7369, 71, 5336, 6058, 201, 3820, 5235, 6176, 6156, 2898, 5275, 1860, 7843, 2105, 5607, 3292, 7809, 3239, 3567, 7376, 8219, 3650, 570, 2959, 4352, 8089, 5489, 1596, 4542, 7513, 1709, 680, 8882, 1906, 6172, 4296, 1681, 867, 1631, 6535, 2863, 120, 7318, 1193, 1740, 7409, 2206, 5784, 9195, 1978, 7544, 8322, 3974, 408, 335, 5534, 2860, 2758, 3094, 7706, 135, 9512, 2326, 232, 9777, 3669, 3071, 7150, 5128, 1918, 4955, 6020, 2300, 2177, 5085, 6767, 8273, 2741, 4026, 1766, 8555, 5279, 605, 9962, 6919, 6885, 7573, 8946, 8009, 5644, 3646, 519, 9053, 8375, 2430, 750, 6784, 9041, 8940, 6671, 3770, 1282, 8070, 1386, 7145, 1363, 7557, 2656, 1529, 7926, 8566, 1383, 4895, 5964, 5654, 1288, 4863, 4342, 4734, 3693, 627, 8457, 409, 1031, 7675, 4270, 5265, 5256, 7410, 8321, 7579, 4635, 7895, 3772, 5835, 9069, 7175, 2927, 8564, 3071, 3712, 8697, 5749, 1927, 8473, 7656, 3018, 3188, 2590, 7849, 7185, 2286, 3338, 8631, 5213, 7465, 4338, 9609, 5314, 4417, 9333, 7130, 6687, 4580, 384, 8197, 3, 9631, 1178, 7590, 3232, 3275, 40, 6384, 151, 6515, 7778, 7743, 6016, 7007, 78, 9133, 3287, 5003};
        int result = solution2.maxArea(heights);
        assertEquals(2840363, result);
        // The answer should not be 1, but this exceeds the time limit when run.
    }
}